{"version":3,"sources":["components/AnimatedSwitch.jsx","components/Product.jsx","components/ProductList.jsx","App.js","serviceWorker.js","index.js"],"names":["AnimatedSwitch","className","this","props","cssClass","animationInDuration","animationOutDuration","isVisible","isSwitched","default","switched","Component","Product","clickOnProduct","isAvailable","state","isSelected","setState","isSelectedHover","isFirstHover","clickOnLink","mouseLeave","mouseOver","productBottomBlock","bottomPromo","text","onClick","linkText","textDisabled","onMouseOver","onMouseLeave","topPromo","hoverSelected","name","classification","dangerouslySetInnerHTML","__html","description","weight","units","textSelected","ProductList","products","map","c","key","id","App","fetchData","url","require","polyfill","fetch","then","response","json","data","dataUrl","setInterval","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gYAmBeA,G,uLAbX,OACE,yBAAKC,UAAWC,KAAKC,MAAMC,SAAW,oBACpC,kBAAC,WAAD,CAAUH,UAAU,wBAAwBI,oBAAqB,IAAKC,qBAAsB,IAAKC,WAAYL,KAAKC,MAAMK,YACrHN,KAAKC,MAAMM,SAEd,kBAAC,WAAD,CAAUR,UAAU,wBAAwBI,oBAAqB,IAAKC,qBAAsB,IAAKC,UAAWL,KAAKC,MAAMK,YACpHN,KAAKC,MAAMO,e,GAROC,cCmGdC,E,YAhGb,WAAYT,GAAQ,IAAD,8BACjB,4CAAMA,KAQRU,eAAiB,WACX,EAAKV,MAAMW,cACR,EAAKC,MAAMC,WAMd,EAAKC,SAAS,CACZD,YAAa,EAAKD,MAAMC,WACxBE,iBAAiB,IAPnB,EAAKD,SAAS,CACZD,YAAY,EACZG,cAAc,IASd,EAAKJ,MAAMI,cAAgB,EAAKJ,MAAMC,YACxC,EAAKC,SAAS,CAAEE,cAAe,EAAKJ,MAAMI,iBAxB7B,EA6BnBC,YAAc,WACR,EAAKjB,MAAMW,cAAgB,EAAKC,MAAMC,YACxC,EAAKC,SAAS,CAAED,YAAY,KA/Bb,EAmCnBK,WAAa,WACP,EAAKN,MAAMC,YACb,EAAKC,SAAS,CACZE,cAAc,EACdD,iBAAiB,KAvCJ,EA4CnBI,UAAY,WACN,EAAKP,MAAMC,aAAe,EAAKD,MAAMI,cACvC,EAAKF,SAAS,CAAEC,iBAAiB,KA5CnC,EAAKH,MAAQ,CACXC,YAAY,EACZG,cAAc,EACdD,iBAAiB,GALF,E,sEAmDjB,IAAIK,EAWJ,OARIA,EADArB,KAAKC,MAAMW,YACU,8BAAOZ,KAAKC,MAAMqB,YAAYC,KAA9B,IAAoC,4BAAQxB,UAAU,uBAAuByB,QAASxB,KAAKkB,aAC3GlB,KAAKC,MAAMqB,YAAYG,WAITzB,KAAKC,MAAMqB,YAAYI,aAI5C,yBACE3B,UAAW,oBACLC,KAAKC,MAAMW,YAAqC,GAAvB,sBADpB,WAEoB,IAA1BZ,KAAKa,MAAMC,WAAsB,qBAAuB,IAFlD,UAGNd,KAAKa,MAAMI,aAAe,2BAA6B,KAE5D,yBAAKlB,UAAU,gBAAgByB,QAASxB,KAAKW,eAAgBgB,YAAa3B,KAAKoB,UAAWQ,aAAc5B,KAAKmB,YAC3G,yBAAKpB,UAAU,kBACb,kBAAC,EAAD,CACEG,SAAS,qBACTK,QAASP,KAAKC,MAAM4B,SAASN,KAC7Bf,SAAUR,KAAKC,MAAM4B,SAASC,cAC9BxB,WAAYN,KAAKa,MAAMG,kBACzB,wBAAIjB,UAAU,iBAAiBC,KAAKC,MAAM8B,MAC1C,yBAAKhC,UAAU,2BAA2BC,KAAKC,MAAM+B,gBACrD,yBAAKjC,UAAU,uBAAuBkC,wBAAyB,CAAEC,OAAQlC,KAAKC,MAAMkC,eACpF,yBAAKpC,UAAU,mBACb,8BAAOC,KAAKC,MAAMmC,QAClB,0BAAMrC,UAAU,yBAAyBC,KAAKC,MAAMoC,UAI1D,kBAAC,EAAD,CACEnC,SAAS,wBACTK,QAASc,EACTb,SAAUR,KAAKC,MAAMqB,YAAYgB,aACjChC,WAAYN,KAAKa,MAAMC,kB,GA1FXL,aCkBP8B,E,iLAlBX,OACE,yBAAKxC,UAAU,gBACZC,KAAKC,MAAMuC,SAASC,IAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAC5BC,IAAKD,EAAEE,GACPb,KAAMW,EAAEX,KACRC,eAAgBU,EAAEV,eAClBH,SAAUa,EAAEb,SACZM,YAAaO,EAAEP,YACfb,YAAaoB,EAAEpB,YACfc,OAAQM,EAAEN,OACVC,MAAOK,EAAEL,MACTzB,YAAa8B,EAAE9B,qB,GAbCH,aCmCXoC,E,YAjCb,aAAe,IAAD,8BACZ,+CAOFC,UAAY,SAACC,GACXC,EAAQ,IAAeC,WACvBD,EAAQ,IAERE,MAAMH,GACHI,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAAD,OAAU,EAAKvC,SAAS,CAAEyB,SAAUc,OAZ5C,EAAKzC,MAAQ,CACX2B,SAAU,GACVe,QAAS,oBAJC,E,iFAiBO,IAAD,OAClBvD,KAAK8C,UAAU9C,KAAKa,MAAM0C,SAC1BC,YAAY,WACV,EAAKV,UAAU,EAAKjC,MAAM0C,UACzB,O,+BAGH,OACE,yBAAKxD,UAAU,WACb,kKACA,kBAAC,EAAD,CAAayC,SAAUxC,KAAKa,MAAM2B,gB,GA5BxB/B,aCOEgD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,QD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,KAAK,SAAAkB,GACjCA,EAAaC,iB","file":"static/js/main.7bd1c24a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Animated} from \"react-animated-css\";\r\nimport '../styles/AnimatedSwitch.scss';\r\n\r\nclass AnimatedSwitch extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.cssClass + \" animated-switch\"}>\r\n        <Animated className=\"animated-switch__item\" animationInDuration={300} animationOutDuration={300} isVisible={!this.props.isSwitched}>\r\n          {this.props.default}\r\n        </Animated>\r\n        <Animated className=\"animated-switch__item\" animationInDuration={300} animationOutDuration={300} isVisible={this.props.isSwitched}>\r\n          {this.props.switched}\r\n        </Animated>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimatedSwitch;","import React, { Component } from \"react\";\r\nimport '../styles/animated.css';\r\nimport '../styles/Product.scss';\r\nimport AnimatedSwitch from \"./AnimatedSwitch\";\r\n\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelected: false,\r\n      isFirstHover: false,\r\n      isSelectedHover: false\r\n    }\r\n  }\r\n\r\n  clickOnProduct = () => {\r\n    if (this.props.isAvailable) {\r\n      if (!this.state.isSelected) {\r\n        this.setState({\r\n          isSelected: true,\r\n          isFirstHover: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isSelected: !this.state.isSelected,\r\n          isSelectedHover: false\r\n        });\r\n      }\r\n\r\n      if (this.state.isFirstHover && this.state.isSelected) {\r\n        this.setState({ isFirstHover: !this.state.isFirstHover });\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOnLink = () => {\r\n    if (this.props.isAvailable && !this.state.isSelected) {\r\n      this.setState({ isSelected: true });\r\n    }\r\n  }\r\n\r\n  mouseLeave = () => {\r\n    if (this.state.isSelected) {\r\n      this.setState({\r\n        isFirstHover: false,\r\n        isSelectedHover: false\r\n      });\r\n    }\r\n  }\r\n\r\n  mouseOver = () => {\r\n    if (this.state.isSelected && !this.state.isFirstHover) {\r\n      this.setState({ isSelectedHover: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let productBottomBlock;\r\n\r\n    if (this.props.isAvailable) {\r\n        productBottomBlock = <span>{this.props.bottomPromo.text} <button className=\"product__bottom-link\" onClick={this.clickOnLink}>\r\n            {this.props.bottomPromo.linkText}\r\n          </button>\r\n        </span>;\r\n    } else {\r\n      productBottomBlock = this.props.bottomPromo.textDisabled;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`product` +\r\n          `${!this.props.isAvailable ? ' product--disabled' : ''}` +\r\n          `${this.state.isSelected === true ? ' product--selected' : ''}` +\r\n          `${this.state.isFirstHover ? ' product--hover-disabled' : ''}`\r\n        }>\r\n        <div className=\"product__card\" onClick={this.clickOnProduct} onMouseOver={this.mouseOver} onMouseLeave={this.mouseLeave}>\r\n          <div className=\"product__inner\">\r\n            <AnimatedSwitch\r\n              cssClass=\"product__top-promo\"\r\n              default={this.props.topPromo.text}\r\n              switched={this.props.topPromo.hoverSelected}\r\n              isSwitched={this.state.isSelectedHover}></AnimatedSwitch>\r\n            <h2 className=\"product__name\">{this.props.name}</h2>\r\n            <div className=\"product__classification\">{this.props.classification}</div>\r\n            <div className=\"product__description\" dangerouslySetInnerHTML={{ __html: this.props.description }}></div>\r\n            <div className=\"product__weight\">\r\n              <span>{this.props.weight}</span>\r\n              <span className=\"product__weight-units\">{this.props.units}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AnimatedSwitch\r\n          cssClass=\"product__bottom-promo\"\r\n          default={productBottomBlock}\r\n          switched={this.props.bottomPromo.textSelected}\r\n          isSwitched={this.state.isSelected}>\r\n        </AnimatedSwitch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;","import React, { Component } from \"react\";\r\nimport '../styles/ProductList.scss';\r\nimport Product from \"./Product\";\r\n\r\nclass ProductList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"product-list\">\r\n        {this.props.products.map(c => <Product\r\n          key={c.id}\r\n          name={c.name}\r\n          classification={c.classification}\r\n          topPromo={c.topPromo}\r\n          description={c.description}\r\n          bottomPromo={c.bottomPromo}\r\n          weight={c.weight}\r\n          units={c.units}\r\n          isAvailable={c.isAvailable}\r\n        />)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;","import React, { Component } from \"react\";\r\nimport './App.scss';\r\nimport ProductList from './components/ProductList';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      products: [],\r\n      dataUrl: \"./data/data.json\"\r\n    };\r\n\r\n  }\r\n  fetchData = (url) => {\r\n    require('es6-promise').polyfill();\r\n    require('isomorphic-fetch');\r\n    \r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ products: data })\r\n      )\r\n  }\r\n  componentDidMount() {\r\n    this.fetchData(this.state.dataUrl);\r\n    setInterval(() => {\r\n      this.fetchData(this.state.dataUrl);\r\n    }, 1000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>Ты сегодня покормил кота?</h1>\r\n        <ProductList products={this.state.products} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}